from pwn import *
data = ""
towa = ""
if True:
    towa = [(0, 4644235709481784784, '0x4073a3c584d895d0'), (1, 4644744766266699006, '0x407572c189ae6cfe'), (2, -4586504474320572148, '-0x3fa68984e09e0ef4'), (3, -4628859141173443843, '-0x403d02dd38f67d03'), (4, -4588735553061526820, '-0x3fae76ac60701d24'), (5, -4610143719360301990, '-0x3ffa854983f80ba6'), (6, -4610924770044831360, '-0x3ffd4ba60c926680'), (7, 4635767524417255904, '0x40558e008a2eb9e0'), (8, -2020494542989829959, '-0x1c0a3d14f1862747'), (9, 4676568037814925594, '0x40e681da55e7791a'), (10, -4588940754081864284, '-0x3faf314d765cda5c'), (11, 4646413208577154266, '0x407b603208ec9cda'), (12, -4589417958957352128, '-0x3fb0e351617384c0'), (13, 4603297578367635154, '0x3fe232c21a04ced2'), (14, -4600857193036164000, '-0x3fd9873d9d38aba0'), (15, 4631633727076662256, '0x4046de55d81f7bf0'), (16, -4597386779699573120, '-0x3fcd32eb0b11f180'), (17, 4645952910941039368, '0x4079bd8ea3d52b08'), (18, 4631568364038343632, '0x4046a2e353714bd0'), (19, -4622909553130051379, '-0x4027dfbecf139733'), (20, 4635926061481165044, '0x40561e30d38f80f4'), (21, -4585519687158741320, '-0x3fa309dc3fa83948'), (22, 5828741033182954683, '0x50e3d916729d04bb'), (23, 4603096121813005772, '0x3fe17b88d7a475cc'), (24, 4645139143638508706, '0x4076d970acd5e4a2'), (25, -4420779536865498093, '-0x3d59c391052f13ed'), (26, -4572243988120891246, '-0x3f73dfaeb25c6f6e'), (27, 4640960687549273892, '0x406801280ded5724'), (28, 4671995030333952563, '0x40d642ba0f721233'), (29, 6144020180362792790, '0x5543f1cd375b0f56'), (30, -4608840314705974016, '-0x3ff5e3d8f88c9300'), (31, 4639800696000231374, '0x4063e22679b437ce'), (32, 4629140592153856928, '0x403e02d7a2ac0ba0'), (33, -4618198007430181050, '-0x4017229e974af0ba'), (34, -4614020467377498573, '-0x40084b2b406ae9cd'), (35, -3598390230680210029, '-0x31f00cd986ee0a6d'), (36, 4638757363131770476, '0x40602d3e9cb2666c'), (37, -4586307288348635984, '-0x3fa5d62df0ce3350'), (38, 4643244611890658716, '0x40701e5fa0fd3d9c'), (39, 4648285998070863851, '0x4082077cd16f97eb'), (40, -4621202234160324855, '-0x4021cef2a25e20f7'), (41, -4606967423190355779, '-0x3fef3c766f0ecf43'), (42, 4597564252562362673, '0x3fcdd4542a039131'), (43, -4587704866862208424, '-0x3faacd450ba715a8'), (44, -4543801824524309225, '-0x3f0ed3af708b12e9'), (45, -3645272680359473996, '-0x32969c307643334c'), (46, -4585739714764622836, '-0x3fa3d1f96af24bf4'), (47, -4618216116421966642, '-0x40173316eb50bb32'), (48, -4618038132355159170, '-0x40169136c63cd482'), (49, 4639078853160408488, '0x406151a357a715a8'), (50, 4678873210073727446, '0x40eeb265138941d6'), (51, -1916524339859892161, '-0x1a98dcbba0bd27c1'), (52, 6870976118000097957, '0x5f5a9c6015969aa5'), (53, -4611416953167649569, '-0x3fff0b495cc59b21'), (54, 4650477668127857189, '0x4089d0ccc4a5da25'), (55, -4578317488534381549, '-0x3f89737fb50ce3ed'), (56, 4604883278470099210, '0x3fe7d4f1ad58b10a'), (57, -4596619692219364528, '-0x3fca7941924cf4b0'), (58, -2251799813685248, '-0x8000000000000'), (59, -9223372036854775808, '-0x8000000000000000'), (60, -2251799813685248, '-0x8000000000000'), (61, -4595340409133354960, '-0x3fc5edc144644fd0'), (62, -9223372036854775808, '-0x8000000000000000'), (63, 6358549563881558527, '0x583e1b23a9e011ff'), (64, -4582276569815062388, '-0x3f978443266c1774'), (65, -2251799813685248, '-0x8000000000000'), (66, 4677244197520596383, '0x40e8e8d108f8dd9f'), (67, -9223372036854775808, '-0x8000000000000000'), (68, -9223372036854775808, '-0x8000000000000000'), (69, -4598417297017312160, '-0x3fd0dc2b0dba93a0'), (70, -4590469130453851888, '-0x3fb49f5a51191ef0'), (71, 4669032352323761432, '0x40cbbc2fd5107518'), (72, 4641893130366982384, '0x406b513550d998f0'), (73, 6310724833739474034, '0x579432ccf6470472'), (74, -4545668172742145624, '-0x3f15751e7f183658'), (75, -9223372036854775808, '-0x8000000000000000'), (76, -2251799813685248, '-0x8000000000000'), (77, -2251799813685248, '-0x8000000000000'), (78, -3063448413348984547, '-0x2a838e19e16676e3'), (79, -2251799813685248, '-0x8000000000000'), (80, -4575976758855866484, '-0x3f81229e1c0c1874'), (81, 4636155978000576224, '0x4056ef4c70072ee0'), (82, -9223372036854775808, '-0x8000000000000000'), (83, 4617983223281219326, '0x40165f464263f6fe'), (84, -9223372036854775808, '-0x8000000000000000'), (85, -2251799813685248, '-0x8000000000000'), (86, -4574459585999376316, '-0x3f7bbec1c6df8fbc'), (87, -4612874775590928492, '-0x4004392b1875006c'), (88, -4407871271187479400, '-0x3d2be79136c77b68'), (89, -9223372036854775808, '-0x8000000000000000'), (90, -9223372036854775808, '-0x8000000000000000'), (91, -2251799813685248, '-0x8000000000000'), (92, 4639468665505942902, '0x4062b42b9a098d76'), (93, -1995918493627338355, '-0x1bb2ed4b8d4a4e73'), (94, -9223372036854775808, '-0x8000000000000000'), (95, -9223372036854775808, '-0x8000000000000000'), (96, 4670621142352136166, '0x40d1612ed65407e6'), (97, 4647021820993099585, '0x407d89b9a7c85741'), (98, 4620937148486310336, '0x4020ddda90eed9c0'), (99, -4588792036883198328, '-0x3faeaa0b8a907178'), (100, 4640079024739300278, '0x4064df49ef53b3b6'), (101, -2251799813685248, '-0x8000000000000'), (102, -9223372036854775808, '-0x8000000000000000'), (103, -4618111421990117205, '-0x4016d3ded8e51f55'), (104, 4638460236536689760, '0x405f1f026f8b3460'), (105, -4595876628574648656, '-0x3fc7d57195b63950'), (106, -9223372036854775808, '-0x8000000000000000'), (107, -4542320784336298850, '-0x3f0990afe63d2362'), (108, -9223372036854775808, '-0x8000000000000000'), (109, -9223372036854775808, '-0x8000000000000000'), (110, -4588186535362083156, '-0x3fac83583b7cb954'), (111, 4644887953125305657, '0x4075f4fbd3866d39'), (112, 4649173613225812500, '0x40852ec4d371a214'), (113, -9223372036854775808, '-0x8000000000000000'), (114, 4678619003771277619, '0x40edcb320f2dd133'), (115, -4573733353398142946, '-0x3f792a4092a707e2'), (116, -3756439087509146796, '-0x34218d7297600cac'), (117, -9223372036854775808, '-0x8000000000000000'), (118, -9223372036854775808, '-0x8000000000000000'), (119, 4601982944732810864, '0x3fdd871b1b348e70'), (120, -4613574846742483778, '-0x4006b5e11cc35342'), (121, -2251799813685248, '-0x8000000000000'), (122, -4566650248486871856, '-0x3f600034b2826330'), (123, -2251799813685248, '-0x8000000000000'), (124, -4579739877043326955, '-0x3f8e812756dbcfeb'), (125, -2251799813685248, '-0x8000000000000'), (126, -2214578014324622972, '-0x1ebbc2f87f35867c'), (127, -9223372036854775808, '-0x8000000000000000'), (128, -4548327346999274147, '-0x3f1ee79fc0162aa3'), (129, -4588694150612859072, '-0x3fae51049e3138c0'), (130, 4594121493025401895, '0x3fc199283ec42c27'), (131, -2251799813685248, '-0x8000000000000'), (132, -4584690435168871504, '-0x3fa017a8f95f2450'), (133, -2251799813685248, '-0x8000000000000'), (134, -4602488664178597920, '-0x3fdf530e1720a020'), (135, -9223372036854775808, '-0x8000000000000000'), (136, 4679815764191516166, '0x40f20ba48ee89606'), (137, -4166874817607086763, '-0x39d3b691cefdb2ab'), (138, 4650854250944690345, '0x408b274cc9ac78a9'), (139, -2251799813685248, '-0x8000000000000'), (140, -4562838889302514376, '-0x3f5275cb7c36dac8'), (141, -4577658648742398944, '-0x3f871c499d490be0'), (142, -2251799813685248, '-0x8000000000000'), (143, 6458895839835354271, '0x59a29b8baea2749f'), (144, 4637224741496855936, '0x405abb5554929d80'), (145, -4539911135547921928, '-0x3f01011fd22c9608'), (146, -2251799813685248, '-0x8000000000000'), (147, -9223372036854775808, '-0x8000000000000000'), (148, -2251799813685248, '-0x8000000000000'), (149, -2251799813685248, '-0x8000000000000'), (150, -9223372036854775808, '-0x8000000000000000'), (151, 4612414619331041618, '0x400296a89e0b9952'), (152, 4652871336270863420, '0x409251d410059c3c'), (153, 4778446832514258873, '0x42507413ae1a57b9'), (154, 4646082630302742594, '0x407a3389484eb842'), (155, -2251799813685248, '-0x8000000000000'), (156, -2251799813685248, '-0x8000000000000'), (157, -2251799813685248, '-0x8000000000000'), (158, 6195317177320303044, '0x55fa3026090d69c4'), (159, 4624136734946769600, '0x402c3bdc57563ac0'), (160, -4574260320851164331, '-0x3f7b0986be7f7cab'), (161, -2251799813685248, '-0x8000000000000'), (162, -4592521009771792264, '-0x3fbbe986b2f74788'), (163, -9223372036854775808, '-0x8000000000000000'), (164, -4575454133128120889, '-0x3f7f474ad331ca39'), (165, -2251799813685248, '-0x8000000000000'), (166, -4595642817093999344, '-0x3fc700cb1b769af0'), (167, -4621625755982887290, '-0x402350237e27f97a'), (168, -4551574796477218234, '-0x3f2a712980a53dba'), (169, -2251799813685248, '-0x8000000000000'), (170, -4544056905682990841, '-0x3f0fbbae266536f9'), (171, -9223372036854775808, '-0x8000000000000000'), (172, 4617060671065589695, '0x40131837d54a87bf'), (173, -2251799813685248, '-0x8000000000000'), (174, -4573560075756263085, '-0x3f788ca83a5c56ad'), (175, -4577671640163817178, '-0x3f87281a6a5816da'), (176, 4646121940619812852, '0x407a5749edcadff4'), (177, 4643500450014344624, '0x4071070e9578b5b0'), (178, -4547661864096128952, '-0x3f1c8a5ef00a5fb8'), (179, 4684867222083788940, '0x4103fdeac02ce08c'), (180, -2251799813685248, '-0x8000000000000'), (181, -9223372036854775808, '-0x8000000000000000'), (182, -9223372036854775808, '-0x8000000000000000'), (183, 4651207472772559054, '0x408c688da74030ce'), (184, -4552957723146710944, '-0x3f2f5aed3587efa0'), (185, 4604113047717159866, '0x3fe5186c5aec23ba'), (186, -9223372036854775808, '-0x8000000000000000'), (187, -2251799813685248, '-0x8000000000000'), (188, 4643662290018583664, '0x40719a3fe56f4470'), (189, -2589809549414635264, '-0x23f0da1054c61700'), (190, -9223372036854775808, '-0x8000000000000000'), (191, -9223372036854775808, '-0x8000000000000000'), (192, 4645088956439366941, '0x4076abcb8ea88d1d'), (193, -2251799813685248, '-0x8000000000000'), (194, -4614440651511760598, '-0x4009c952fe7b06d6'), (195, -2251799813685248, '-0x8000000000000'), (196, 4636255502950460940, '0x405749d0e54fee0c'), (197, 4623515673733174208, '0x402a0702425113c0'), (198, 4611553821176757103, '0x3fff87c46dd5fb6f'), (199, -2251799813685248, '-0x8000000000000'), (200, -4578811355226505222, '-0x3f8b34ab01cd0006'), (201, -4628859591450490911, '-0x403d03460f90f81f'), (202, 4621763794226646208, '0x4023cdaf06a40cc0'), (203, 4674482063619336447, '0x40df18ab9ef728ff'), (204, 4614208614007549164, '0x4008f6498d77acec'), (205, -9223372036854775808, '-0x8000000000000000'), (206, 4670231779470828708, '0x40cfff0f3a1964a4'), (207, -2251799813685248, '-0x8000000000000'), (208, -1851092430821796989, '-0x19b066c2218c2c7d'), (209, -2251799813685248, '-0x8000000000000'), (210, -4583018301738982502, '-0x3f9a26dd12441c66'), (211, -2251799813685248, '-0x8000000000000'), (212, -9223372036854775808, '-0x8000000000000000'), (213, -9223372036854775808, '-0x8000000000000000'), (214, -4566914416392961229, '-0x3f60f07714b67ccd'), (215, -9223372036854775808, '-0x8000000000000000'), (216, 4644313723255386182, '0x4073eab9841bf046'), (217, -2251799813685248, '-0x8000000000000'), (218, 4634286039771331432, '0x40504a99841f3b68'), (219, 4626422140445303136, '0x40345a6cc63ea160'), (220, -4618586494335418232, '-0x401883f23f477f78'), (221, -4579980534135001212, '-0x3f8f5c07af52107c'), (222, -9223372036854775808, '-0x8000000000000000'), (223, -9223372036854775808, '-0x8000000000000000'), (224, 4637601652549209712, '0x405c1221c5f5ce70'), (225, -4573343070809266670, '-0x3f77c74ad39499ee'), (226, -9223372036854775808, '-0x8000000000000000'), (227, -4584981327913673472, '-0x3fa12039b817e300'), (228, -9223372036854775808, '-0x8000000000000000'), (229, -2251799813685248, '-0x8000000000000'), (230, 4634508676721640960, '0x4051151638758600'), (231, 4676035017878937911, '0x40e49d12f5f62137'), (232, -4584559600170726830, '-0x3f9fa0aa93c875ae'), (233, 4673819630905327444, '0x40dcbe30fc5bff54'), (234, -4572433350891607880, '-0x3f748be8270b1748'), (235, -2251799813685248, '-0x8000000000000'), (236, -9223372036854775808, '-0x8000000000000000'), (237, -9223372036854775808, '-0x8000000000000000'), (238, 4644097911415471410, '0x40732671e80d7d32'), (239, -9223372036854775808, '-0x8000000000000000'), (240, -4626792887567747001, '-0x4035ab9e10c787b9'), (241, -9223372036854775808, '-0x8000000000000000'), (242, 4631892144721443488, '0x4047c95d640b3aa0'), (243, 4627175665213704704, '0x403707c06e650a00'), (244, 4645365344432235768, '0x4077a72b26cb24f8'), (245, -2251799813685248, '-0x8000000000000'), (246, -9223372036854775808, '-0x8000000000000000'), (247, 5296162233555047200, '0x497fbf7dbbe35320'), (248, -4581767010539287960, '-0x3f95b4d222cc3598'), (249, -2251799813685248, '-0x8000000000000'), (250, -9223372036854775808, '-0x8000000000000000'), (251, -2251799813685248, '-0x8000000000000'), (252, -2251799813685248, '-0x8000000000000'), (253, -9223372036854775808, '-0x8000000000000000'), (254, -9223372036854775808, '-0x8000000000000000'), (255, -9223372036854775808, '-0x8000000000000000'), (256, -4615736093796868341, '-0x400e6385a7b620f5'), (257, -4595247769832068880, '-0x3fc5997fffbf1710'), (258, 4645700266289193887, '0x4078d7c7391ae39f'), (259, 4675527765337444860, '0x40e2cfbb066a11fc'), (260, 4629319907048114816, '0x403ea5eda33f4a80'), (261, 4618661563738702092, '0x4018c838b465410c'), (262, -9223372036854775808, '-0x8000000000000000'), (263, -2251799813685248, '-0x8000000000000'), (264, 4604563756435502154, '0x3fe6b25727f9f44a'), (265, -9223372036854775808, '-0x8000000000000000'), (266, 4999982276963929810, '0x45638163cdaf0ed2'), (267, 4595258741805089306, '0x3fc5a37a9c4d021a'), (268, 5985473528634094799, '0x5310ac763ebd34cf'), (269, 4640579234911107924, '0x4066a63a30ee3b54'), (270, -2251799813685248, '-0x8000000000000'), (271, -2251799813685248, '-0x8000000000000'), (272, 4642131035206939596, '0x406c2994da5373cc'), (273, -4582644965343977218, '-0x3f98d350eb0f5f02'), (274, 4645009015621115561, '0x40766316e2955ea9'), (275, -9223372036854775808, '-0x8000000000000000'), (276, 4636428884903569440, '0x4057e7818709a820'), (277, 4679141985181768586, '0x40efa6d828601b8a'), (278, -2642799228660945426, '-0x24ad1be575031212'), (279, -2251799813685248, '-0x8000000000000'), (280, 4643648757679253920, '0x40718df12727e9a0'), (281, -9223372036854775808, '-0x8000000000000000'), (282, -2999053482700390408, '-0x299ec740bac14008'), (283, -2251799813685248, '-0x8000000000000'), (284, -2654536447832683901, '-0x24d6ced5c064f57d'), (285, 4594240131384770895, '0x3fc2050ee408814f'), (286, -9223372036854775808, '-0x8000000000000000'), (287, -9223372036854775808, '-0x8000000000000000'), (288, 4617675017823441664, '0x401546f6958fd300'), (289, 4647847495997932349, '0x408078ac1925433d'), (290, -2251799813685248, '-0x8000000000000'), (291, -4593629461607312248, '-0x3fbfd9a840df6b78'), (292, -2251799813685248, '-0x8000000000000'), (293, -3398953472367545795, '-0x2f2b822cb88c4dc3'), (294, -9223372036854775808, '-0x8000000000000000'), (295, -9223372036854775808, '-0x8000000000000000'), (296, 5087085829099889055, '0x4698f59be96c219f'), (297, -4616838681033177977, '-0x40124e51c043fb79'), (298, 4686781961938271643, '0x410acb5cdd09fd9b'), (299, 5479362625945584661, '0x4c0a9b470309c415'), (300, 6300821302823571831, '0x577103977c035177'), (301, -4616006920090875494, '-0x400f59d650c2f666'), (302, -2460123311989131237, '-0x22241d1e32c507e5'), (303, -4588071355625742084, '-0x3fac1a96dc379f04'), (304, -4539082722067652377, '-0x3efe0fafc6f49f19'), (305, -3035327095383131355, '-0x2a1fa5e9516e04db'), (306, 4617545457474885182, '0x4014d120f702563e'), (307, 4679441942643996456, '0x40f0b7a7725bf728'), (308, -9223372036854775808, '-0x8000000000000000'), (309, -4580022330945425889, '-0x3f8f820b435bd1e1'), (310, -4584342570233094472, '-0x3f9edb475b71e148'), (311, -2251799813685248, '-0x8000000000000'), (312, 4634315543478455200, '0x4050656ee21acba0'), (313, -9223372036854775808, '-0x8000000000000000'), (314, -2251799813685248, '-0x8000000000000'), (315, -2251799813685248, '-0x8000000000000'), (316, -9223372036854775808, '-0x8000000000000000'), (317, -2251799813685248, '-0x8000000000000'), (318, -9223372036854775808, '-0x8000000000000000'), (319, -2251799813685248, '-0x8000000000000'), (320, 5523347060460642930, '0x4ca6dee335f46272'), (321, 4634269022688317404, '0x40503b1f6aef0fdc'), (322, -9223372036854775808, '-0x8000000000000000'), (323, 4645909709345620154, '0x40799643fc1580ba'), (324, -2251799813685248, '-0x8000000000000'), (325, 4639958918901136826, '0x4064720d9d81fdba'), (326, -9223372036854775808, '-0x8000000000000000'), (327, -2251799813685248, '-0x8000000000000'), (328, -3690766533437875071, '-0x33383c9b8e76e37f'), (329, -4619637195789112461, '-0x401c3f8dbe31148d'), (330, 4672724185730953966, '0x40d8d9e3c7deb2ee'), (331, -4592285973470229432, '-0x3fbb13c30bb3b3b8'), (332, 4612788529255764337, '0x4003eaba4e495171'), (333, 4607276030685435692, '0x3ff05523b72d572c'), (334, -4548474309763054747, '-0x3f1f6d492f6abc9b'), (335, 4620537238131839744, '0x401f72232e501300'), (336, -4607457718447725524, '-0x3ff0fa6231b55bd4'), (337, -4619062190706844384, '-0x401a3496f084e2e0'), (338, -9223372036854775808, '-0x8000000000000000'), (339, -4574133958350567275, '-0x3f7a9699ae89776b'), (340, -4602670391934884480, '-0x3fdff855e17c9a80'), (341, -2251799813685248, '-0x8000000000000'), (342, -9223372036854775808, '-0x8000000000000000'), (343, -9223372036854775808, '-0x8000000000000000'), (344, 4643737618746276580, '0x4071dec2bb7d7ae4'), (345, -4579608319134017666, '-0x3f8e0980a0682882'), (346, 4646953080063716277, '0x407d4b34a91aebb5'), (347, -2251799813685248, '-0x8000000000000'), (348, -9223372036854775808, '-0x8000000000000000'), (349, -9223372036854775808, '-0x8000000000000000'), (350, 4633364096807173488, '0x404d0418f13d7d70'), (351, -2348483273695893331, '-0x20977d1839971753'), (352, -4110144435532732582, '-0x390a2a966f7a18a6'), (353, -9223372036854775808, '-0x8000000000000000'), (354, 4608968986718459548, '0x3ff658dfc225569c'), (355, -9223372036854775808, '-0x8000000000000000'), (356, 4636245438422189044, '0x405740a990ae03f4'), (357, -4587394416560006184, '-0x3fa9b2eab3ab6428'), (358, -9223372036854775808, '-0x8000000000000000'), (359, -4584765983947777640, '-0x3fa05c5f0b806668'), (360, -4574763726431650560, '-0x3f7cd35efd4d0300'), (361, 4639881538203510518, '0x40642bad048366f6'), (362, 4640492819820255612, '0x406657a21c23197c'), (363, -4587649788056254740, '-0x3faa9b2d02fd3914'), (364, 5009717597296903876, '0x4586179cb3e7c6c4'), (365, -3300527719811066579, '-0x2dcdd47966ab2ad3'), (366, 4620839591952997211, '0x402085206a6b5b5b'), (367, 4567063893557172533, '0x3f617869f1fcd935')]

    data = [b'%\x00\x00\x00\x00\x00\x00\x00', b'\xd0\x95\xd8\x84\xc5\xa3s@', b':\x16&\x8b\xcd|u\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'd\xee\th\xd5\x83{@', b'\x98\x05nyODX@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x0c\xf1a\x1f{vY\xc0', b'\xc6\xc2\x04\x8b\xd7\xe9z@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\x00>\x13%\x12\x91:@', b'\xbcV\xc0\x8e\x97bf\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xdc\xe2\x8f\x9fS\x89Q\xc0', b'\xc9\xc92\x03\xd3\x01t\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xa8\xcek\xd0\xd3!}@', b"\xce\x83'\xfbX\xb3e\xc0", b'%\x00\x00\x00\x00\x00\x00\x00', b'\x80\x99m\xf3Y\xb4\x02\xc0', b'\xd3\x04\x8c\x8f\x9c3{\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\x04\xc0\x81\x94,\xd1j\xc0', b'z\x8e\xccl\x16\xccr\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'/\x04M\x9fZ\xb0X\xc0', b'\x00\x00\x00\x00\x00\xc0U@', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xcc\xd0\xe6,\x9e\xa8f\xc0', b'\xfc"\xbd\xec@\xc9o\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'x\xa8t\xbb\xb5\xacX@', b'\x0e\xe7\x8b"\xb4\xbdd\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b' 1\x93>\xc2\x01]@', b'\x92\xd0Gy\xc1\x1ft@', b'-\x00\x00\x00\x00\x00\x00\x00', b'd\x05i\xf0\xccrt@', b'\xcc\x94:\xc4bVx@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xc2\x08P\xbcH>q@', b'\x0c\xbf`\\\x1dR~@', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xa8h\x1c\x00U\np@', b'K\xa32\x13\x1b\xbep\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'(SU\x90YJW@', b'`*\x8bH]\xb6G\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xf0\xc3\xdaj\xbb\x9ag\xc0', b' \x02=\xcc\x18AE\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xd2y9\xa2q\x97r@', b'\xd8\xc4n\x06t\x98\\@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xd0KqS\xe3\xa2F@', b'\x80\xe7\x00s\x08\x9d_@', b'/\x00\x00\x00\x00\x00\x00\x00', b'hz\x85M\xc8\x18S@', b'\xaa\xba9\xd2UTi\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\x00\x01\x19H\xd0\xddZ\xc0', b'\xfa@\xd4\x8d\x00~h\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\n\xb7\xc4\xcd\x1d\xe0s\xc0', b'\xb8\x8a]\xbb)Ei\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x0c\x85\x07\xb6\x82y.@', b'\x82\x19\xb3\x8a\xd0BQ@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xf8\xdf4|\x03\xd9`@', b'(\x0f\xba\xb9\x85\xd6n@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xa2\xe4\xd5\xacp\xd9v@', b'o\xb3O\xcb\\\xa3|\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'@\xc7\x1du\x85\xd2\x1d\xc0', b'\x00\x00\x00\x00\x00\x00.@', b'-\x00\x00\x00\x00\x00\x00\x00', b',\x16\xaf\x9dd\x06|\xc0', b'\xf8\n\x98\xfd=:|@', b'+\x00\x00\x00\x00\x00\x00\x00', b'\x1c\xadS&Afh@', b'\x00~\x95\x19FF\t\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xa4\xba5\x1d;Kn\xc0', b'\xacB!\xcf\xac\x83W\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xffL\xea\x1f\xb9\x9dN@', b'\t\xb8\xcc\x0c\xaf\xbfL@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xd0\x8aC\xed\xfasH\xc0', b'\x00\x10=\xca\xc6A\x12@', b'%\x00\x00\x00\x00\x00\x00\x00', b',\x86\xbd\xb5[\x91w@', b'\x8a\xd4\xc6\xf1\x90@k\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xc8\xb8\xaeS\x8cG{@', b'\x0e\xf8\x83\xd9^gy@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xf4\xb1vA\x8d\nc@', b'\x8a>\xcfY\\\x81h\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'&\x06\xde\xe68\x87n\xc0', b'\xb4\x97)r\xae\x9ad@', b'^\x00\x00\x00\x00\x00\x00\x00', b'Z\x0eOco?@\xc0', b'\x00\x00\x00\x00\x00\x80F@', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xba\x18\x01\xb7\xc1\x9ct@', b'\x08\xcbO\xd1D\x0ci\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xb0\xcc1\x0f\xd2)Z\xc0', b'JY\x1d\xbb\xe1\xbbh\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x9c=\xfd\xa0_\x1ep@', b'\x1a+\xa6\xe7/\xc2s\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'2\xcb\xb94\x95\x1ep@', b'\xa4d%nd\xf0s@', b'/\x00\x00\x00\x00\x00\x00\x00', b'2\x95|\xa6\xbf\x06i\xc0', b'\xde\xf6\n\x89~\x86z@', b'/\x00\x00\x00\x00\x00\x00\x00', b'@\x05\xac\x90\x05E)@', b'\x80F\xb1FE\x1e\x08\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'H\x90\x9a\x8c(i[@', b'\xdeZ\xecJ\xc6g}@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xd06\x19\xe3\xce\xf9r\xc0', b't\xf8\x05L@Zk\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xfc7\x91/\x1d\x8bl@', b'[\xa8+\x80\xb4@s\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'3\xda\xaf\xb1lkL\xc0', b'\x00\x00\x00\x00\x00\x80B@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x0c\xb4\r\x95\x06.\\\xc0', b'x\xbcmIZ\x1dw\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\x00~\xcc^!Xs\xc0', b'\x1a\xb1\xc1\x03\xbc\xf5x@', b'/\x00\x00\x00\x00\x00\x00\x00', b'@e\xed27\xfds\xc0', b'\xf2\x84\xc5\x03\x95&y@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xa8\x15\xa7W\xa3Qa@', b'\x0c\x15v\x8f\xf90m@', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xdcYM\xec:\x9bo@', b"\x88'T\xcfC\x14o@", b'^\x00\x00\x00\x00\x00\x00\x00', b'\xf2S\x99\xfd\x0f\xceU\xc0', b'\x00\x00\x00\x00\x00@W@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x06\xa1\xb8\xaf\xc9AN@', b'4V|\x13\xb3;U@', b'/\x00\x00\x00\x00\x00\x00\x00', b'v\x7f\xeb\xce\x08\xf4v@', b'\x14\xbc\xc1\xe6\xc3\xa8e\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xee\xc3\xc0\xaf5\x01|@', b'\\\xf0\x8a\xd9c\xa0w@', b'+\x00\x00\x00\x00\x00\x00\x00', b'J\xcc H)\x83d\xc0', b'\xdck\xc5M\xd7\x95h\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xe0t\x14cYyg@', b'\x18\xd1\xe7\xf8\x02\x85o@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x05E\x9cX\x893|\xc0', b'P\x14\xc1q\x1d\xdbZ@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x04\x82\x89\xc7\x94\xe6|\xc0', b'h1\x83\x95\x01\r\xdd?', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xe5\\,\xbb\xd1Ak\xc0', b'\xe5\\,\xbb\xd1Ak@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x1aN\xe5\xcf\x02x\x07\xc0', b'\xce{<\\\xba\x9d\xef?', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xcdZ-\xb9\xb6\xcey\xc0', b'\xca\x9fs\xcd\x92-x@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xfc<P\x84\xe83`\xc0', b'\xfc<P\x84\xe83`@', b'^\x00\x00\x00\x00\x00\x00\x00', b'<\x191\x16A^U@', b'\xfd-B\xc8(MN@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x8c\xe8\x93\xd9\xbc{h\xc0', b'n\xde\xc2\xc9\xbe+t@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xd4%\xbd\xe3\xc0c|\xc0', b"\x04\x83v\x85\xec'\xe3?", b'*\x00\x00\x00\x00\x00\x00\x00', b'&y\xa4\xd2\xe0\xc8b\xc0', b'ez\xac\xfc\x807u\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xbf8wr\xc7\xa9r\xc0', b'\xbf8wr\xc7\xa9r@', b'%\x00\x00\x00\x00\x00\x00\x00', b'"\xe3\x98\x82B\xc5u\xc0', b'"\xe3\x98\x82B\xc5u\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x12\xa8\x9a\xef\xe0\xe5g\xc0', b'LQv\xa0\xa3\xf3e@', b'-\x00\x00\x00\x00\x00\x00\x00', b'F\xf5\xb522Tq@', b'h\xd1\x92\xe8F\xc0t@', b'*\x00\x00\x00\x00\x00\x00\x00', b'p\xcef\xe0q\xeb^\xc0', b'<\xc1\xeb\nB\xb4\\\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'N\xd6\xc1w\x1a\xf8u@', b'\xac\x13\xaa\x9e\xff\x9e`\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xe6\xab\x8d\x90\xafu<@', b'\x0c\xc3-\xddD\x94S@', b'*\x00\x00\x00\x00\x00\x00\x00', b'\x16\x1c\x8d\xe8\xcc\xd6z@', b'8\xdd\xc5R{\xa5_\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xd1v\x82q\x01\x02e\xc0', b'\xd1v\x82q\x01\x02e\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b"\xcf\x9e'&\x01hV\xc0", b'X\x07\xe6R\x991\xd4?', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x05\xae\x87t\x1f:{\xc0', b'B\xbc1\x80P\xe8\xe1\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xbfl\x01\x13\xc0IS\xc0', b'\x00\x00\x00\x00\x00\x80K@', b'^\x00\x00\x00\x00\x00\x00\x00', b'G\x94\xe4\r\xcf\xbb^\xc0', b'V~\xffGNX\xe8\xbf', b'-\x00\x00\x00\x00\x00\x00\x00', b'p\xd1)\xea\xfd\xcbe\xc0', b'\xd4\xfe\xde\xeeb\xf7s@', b'-\x00\x00\x00\x00\x00\x00\x00', b'p\xa82n\xe8Un@', b'\x00\x11/6B\xdeb@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x8f\xbd\xf6\xd9\x84\xfeV\xc0', b'\x8f\xbd\xf6\xd9\x84\xfeV\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xe0\x02\x89;Olr\xc0', b'\xd8\xe7\x9f\xaf\xf7YJ\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xa2\x90\x9f\xa8\xf6\xf8u\xc0', b'\xa2\x90\x9f\xa8\xf6\xf8u\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'/Q\x15O\x8e\x12}\xc0', b'\x10cTSk\x06\xda\xbf', b'+\x00\x00\x00\x00\x00\x00\x00', b',\x06j\xb1)"p\xc0', b'\\\xda\xd6\xc0R`x\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'p\x99\x9aL\x8d\x8di@', b'8\xda\x1f\xfc)p]\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xd5\x88\xed\x95\x0f\x90X\xc0', b'\x00\x00\x00\x00\x00\x00\x1c@', b'%\x00\x00\x00\x00\x00\x00\x00', b'7\x15\x99.v\xae}\xc0', b'7\x15\x99.v\xae}@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x86+5\xa6dAR\xc0', b'\x86+5\xa6dAR\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xe6\xed-Y\xa9\r~\xc0', b'\xe0~/\xd06z\xd9?', b'+\x00\x00\x00\x00\x00\x00\x00', b'$x)\x84\x80g]\xc0', b'\xc4$\x0f\xee\xf5\xb3p@', b'^\x00\x00\x00\x00\x00\x00\x00', b'D\xfc\x89]\x8ddM\xc0', b'\x00\x00\x00\x00\x00\xc0X@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x10\xf2\xbc)K\xc3x\xc0', b'\x10\xf2\xbc)K\xc3x@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xf6K_\xf2\tzy\xc0', b'\xf6K_\xf2\tzy@', b'*\x00\x00\x00\x00\x00\x00\x00', b'X\xa2\x80\xf5"qU@', b'T\\:\x8a\xf8\xefi@', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xf0NR(\x84\xbcq@', b'\xa2\x10\xec\xfej\x9ag\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xc0\xd9\xee\x90\xda\xdd @', b'\xa2\x1a\xf1\xfb=\x99{@', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xf0\x1d\x9b\xee\xd5\x91A\xc0', b' \xffC\xfc\x12\x1aA@', b'-\x00\x00\x00\x00\x00\x00\x00', b'D\xa4\x1d0a\x88`\xc0', b'\xfd\xab\xb8\x8f\xd5\xb3r\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'o1)\xbcU\xcc`\xc0', b'\xa0K\x1b\x96\xde\x9a\xa1?', b'%\x00\x00\x00\x00\x00\x00\x00', b'*\xb73\x0b#\x98a\xc0', b'*\xb73\x0b#\x98a@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xa0o\xbey\xc2.Z@', b'\xdc5\xfb\xc9c\xa4`\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'(D\xc45$:\x7f@', b'\x10w\xe1\x99crw\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'\x0c\x96\xc0\\\xd3\xddp@', b'w2eC|`r\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xb9\xd5\xd7I\xefdz\xc0', b'\xb9\xd5\xd7I\xefdz\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xdd^\xc5\xd2\xfeyq\xc0', b'(\xb8n\x8e\x13\x8at@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xa1N<%3*_\xc0', b'\xa1N<%3*_@', b'%\x00\x00\x00\x00\x00\x00\x00', b'P\xb5/\xdd0\\Z\xc0', b'P\xb5/\xdd0\\Z@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xacF\x83\xc4\xa7|S\xc0', b'\x8dx\x81G\xbb\x0fs\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xd8\xbc\x8b=\xdf\x9aG\xc0', b'\xd4\xe47\xbbW\xe8x@', b'-\x00\x00\x00\x00\x00\x00\x00', b' \xab\xe3\xfc\x00\x1bg@', b'\x97nq(\t\xd0~\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xf9\xd3\xe8%\xf6\xaf{\xc0', b'\xf9\xd3\xe8%\xf6\xaf{\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'\x00e\xe6f\xa1Jn@', b'pPf\xaa`yo@', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xab\xdc\xb4\xc2\x9e_v\xc0', b'\x92\x13\xfd\x17\xe0Kw\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'b\x16!\x13)\xddQ\xc0', b'\x00\x00\x00\x00\x00\x00?@', b'%\x00\x00\x00\x00\x00\x00\x00', b'.\xa7\xca*B\xb8~\xc0', b'.\xa7\xca*B\xb8~\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x19\xee%V\xb3\x13[\xc0', b'\x19\xee%V\xb3\x13[\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xd6U\x9c\xc9\xc1\t`\xc0', b'\xce|\xa8\x0c\x84aq\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\x96\xe1J\xc2\xdf\xacc\xc0', b'\xa0\xf1\x9b\xe8b\xe5X@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xb9Y\xf9\xef\x0c\x16t\xc0', b'\x8e\xac\x88\x03+q\xe5\xbf', b'*\x00\x00\x00\x00\x00\x00\x00', b'`>r\x06`67\xc0', b' \x11o\x9d~\x0eV@', b'^\x00\x00\x00\x00\x00\x00\x00', b'B\x0b\xed\x1d2\x92a\xc0', b'2y?\xbb\x8b!\xe0?', b'-\x00\x00\x00\x00\x00\x00\x00', b'\x90\xc5\xc5\x0c\xb6k<\xc0', b'x\xa7\xaf\x90:po@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xee\xcc\xbc\xea\xdd\x87r\xc0', b'J\xa5\x15xi\xfc\xe4\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'f\x05s(\xbe\xfdW\xc0', b'\x00\x00\x00\x00\x00@T@', b'%\x00\x00\x00\x00\x00\x00\x00', b'RV\xf4\x83\x99go\xc0', b'RV\xf4\x83\x99go\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xfcR=Z\x83\x13y@', b'\x14\xc7\x9a\xdc\xbb\xd0U\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xfco?^C\xe6z\xc0', b'\x90\xfdd\xb2\xb0\xf8]@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xa8t?\xfd\xec\x90G\xc0', b'\xc8\\xY\x04mu\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xfed_|D\xa2y\xc0', b',\xb3\x7f\xc1zH\xd2?', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xb0\xdb\xa0\x06W\xe8_\xc0', b'2\xb87\xbd\xb3#p\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xfdpn\x13\xeb\xf9m\xc0', b'\xce^s\xba3\x93\xea\xbf', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xe0_\xdf\xe8\xf1\xac \xc0', b'\xa6\xf2#\xe2\xdcEl\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'EEZ\xcf\x17\xdax\xc0', b'EEZ\xcf\x17\xdax@', b'*\x00\x00\x00\x00\x00\x00\x00', b'@[_\xd6\xdb\xc9t\xc0', b'n\xd8\xbd\x1a\x12\xc7k\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xa5\xd1\x1d-\xe6GM\xc0', b'\x00\x00\x00\x00\x00\x001@', b'+\x00\x00\x00\x00\x00\x00\x00', b'.\x98\xad"\xce\xe2x@', b'$Y\xabp\xcbk}@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xcc\xa8\xc1L\xa2*r\xc0', b'^7\xcc\x06\xbf\xcd\xeb?', b'*\x00\x00\x00\x00\x00\x00\x00', b'`\xbaVu\xc4|6\xc0', b'\x80\xee\xccv\x96\x04e@', b'%\x00\x00\x00\x00\x00\x00\x00', b' \xf4\xb6b\xb6\xe3x\xc0', b'\xbc\x91\xe4=\x0f\x90z\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'}\xf6x\xc4j\xa6x\xc0', b'(\xbbO\xc8\xb5\x9d\xcf\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'#o\x87\x9b\xc0\x899@', b'S\x19\xbfQ\x03\xfeU@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x80\x9d\x92TU\xbbZ@', b'\xf83\xb6\x00\x8f\xff{@', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xf6\xe2\x06\x91\xd2\xc4r@', b'\x8e%nBLlz\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x94:\x86\xc9\x00\x06t\xc0', b'B\x03\xa7\xc0\x0e\xb2\xe2\xbf', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xc3\x08\xcf\xd8I\xa3V\xc0', b'\xc3\x08\xcf\xd8I\xa3V@', b'^\x00\x00\x00\x00\x00\x00\x00', b'tA\xdd\xb0\xfd\xc0h\xc0', b' \x07Q\x8e_\xef\xea\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xc3\xa4\x00\x04\xf0\x062\xc0', b'ZI\xd1\xf3\xd8)\xe1?', b'%\x00\x00\x00\x00\x00\x00\x00', b'@\xe13!x>j\xc0', b'@\xe13!x>j\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'p\x11l\xa3\xf1\xdad@', b'\xe0\x89\xde\x87z\xf3Q@', b'*\x00\x00\x00\x00\x00\x00\x00', b'|\x17ZC\xfa\x00b\xc0', b'`\x15D$\xdaG \xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xf3\xf8S\x8d\xd4T0@', b'L?\x97\xc0l\xe1"@', b'-\x00\x00\x00\x00\x00\x00\x00', b'(j\xec\xb3>\xefs@', b'h8\x89Q*\x11Y\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x84^\nTs\xe9z\xc0', b'\xa0I\xfe`-u\xaf\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x11\x006z\x946f\xc0', b'\xa8{n\xb1\x93R\xe0\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x01\xba\xfc$\x11\xb9t\xc0', b' \xb2C\x94\xa3\xfa\xb5?', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xc0\xbc\xe0\x81\xcb\xa0X@', b'\xc8\xdf\xb0y|\xa1J@', b'+\x00\x00\x00\x00\x00\x00\x00', b'\x9c\xf8\xb6\x82\xc3\xffp@', b'\xc6F\xfc\x9f\xe4\x1dp\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'T\x06\x85\x95q\x81p\xc0', b'V\x00|\xed\x80ky\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xf8{\x9a\xc5\xea\xc9t\xc0', b'(\xca\xca\x80\xdf\xd6\xe9?', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x8f^\x03\xf8\xaf\x12s\xc0', b'\x80Gb\xce\xe0\x8fp@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x00%\x96\xb1\x18)j\xc0', b'\x00%\x96\xb1\x18)j@', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xecO>\xe8\x87\x98~\xc0', b'\x10\xdd\xf0\x8a\x13\xc7F@', b'^\x00\x00\x00\x00\x00\x00\x00', b'8\xb0\xce\xa4L\xcbg\xc0', b'\x12\xc88\x0ci\xb1\xed?', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xc0\tV\t\rTp@', b'\x11\xa0\x9eW\x00\xe4q\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xb8u>E\x96yj\xc0', b'\xccj\x8e\xb0S\x88}@', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xc0\x88ujicK\xc0', b'\xde\xc6\x81\xe6\x1a0y@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xb8k\xfd\xd2|1y\xc0', b'H,?\xb4p\xca\xd1\xbf', b'*\x00\x00\x00\x00\x00\x00\x00', b'DX\xa8\xdcOld@', b'\xbf\x81\xd3;\xe1|y\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xd5O~\xd0\x9eHX\xc0', b'\xd5O~\xd0\x9eHX@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xd0\x18>\x0f\xbft|\xc0', b',\xb9Ve!\xd8W\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'0\xfd\n\xa6\xadeu\xc0', b' \xa3\x9eF\xba\xe2\xbd\xbf', b'+\x00\x00\x00\x00\x00\x00\x00', b'\x94iJ\xe7m\x05t\xc0', b'\x12\xe9\xfc\xa3A\xe1z\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xb2L\xcc\xee\xa8\xa7|\xc0', b'`\x1c#\xc9\x1a~N\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'@\xd7A-\xb66t@', b'\xd0"$\x02O\x82X\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xa0\xae-\xb6p\xe2o@', b'\x00\xe6\x1d\xa6c]1\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'&)\x96)n\xf3c\xc0', b'\x0cg\xad\x0696o@', b'*\x00\x00\x00\x00\x00\x00\x00', b'z\xc6\x1e\x1c\xd2b~@', b'`&!\x88\xc2\ru@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x18`\x9a\xfd\xa5\xb4}\xc0', b"\x9a'3s\xc56\xeb?", b'%\x00\x00\x00\x00\x00\x00\x00', b"\x92\x98\xb2'rfB\xc0", b"\x92\x98\xb2'rfB\xc0", b'%\x00\x00\x00\x00\x00\x00\x00', b'\x9b\xef2d$\xcbf\xc0', b'\x9b\xef2d$\xcbf@', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xd6\xbd\xf0-m<}@', b'\xc7\xa3\x8f \xae\x94{\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'\x86M\xfa\xee\xb5\xa6p@', b'\xe8\x81\xd4\x7f\xda\xfcO\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\x15\x9e\x0f\xa2\xce\x01s\xc0', b'\xfc\x16\xa8\xf8\x07\xd5|\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'h( \xbf\x95\xd9v\xc0', b'h( \xbf\x95\xd9v\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'S\xb3\x94\xdd\x84\x97r\xc0', b'\x82\x84\xf9\xdb\xf4y\xe2\xbf', b'+\x00\x00\x00\x00\x00\x00\x00', b'*\xa3\x87\x85\x9f5s@', b'\xa0\xeb\x85\x01\xfa\xb59\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xc4\xc1\xa3d\xa3\xecQ\xc0', b'\x00\x00\x00\x00\x00@R@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x1f\x93\xd1\x02\xfaht\xc0', b'\x1f\x93\xd1\x02\xfaht\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b',E\x85l`\x19e\xc0', b',E\x85l`\x19e@', b'+\x00\x00\x00\x00\x00\x00\x00', b'x\x94\xa4\x8a\x83\x16{@', b'l\x1d\xf0\xef\xdf\xaaQ\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x95\xd7\xd9!\x9cqT\xc0', b'8\xd1e.d\xc8\xd3?', b'/\x00\x00\x00\x00\x00\x00\x00', b'f\x1d\xc8\x80\xe9\xd2{@', b']\x9d\x0f\x1a~\nt\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x94\xca\xfc*\xe6\xefV\xc0', b'@\x1a\x91\xb5h2\xb1?', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xe6\xa6\x0bjL2p@', b'\xc6Voa\xb0\xbfd\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xc0\x13QB\x02\x07*@', b'\xdc%\xd1q\xe4N{\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xe4\x01B\xbe"\xcet@', b'\x14\xde*\x91x\x1de@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xed\xa6}\x9d"\xf0t\xc0', b'\xd00C-c\xe3\xe9?', b'-\x00\x00\x00\x00\x00\x00\x00', b'pU\xc5\xcat\xdf]@', b'VU\xe402C|@', b'/\x00\x00\x00\x00\x00\x00\x00', b'X%R\xe9\xc6\xce@\xc0', b'\x98\tN\xb9\xa9Sl@', b'%\x00\x00\x00\x00\x00\x00\x00', b'D\xad\x06\x12%\x0ew@', b'\xde\x8c\xd1\x99\xb7ov@', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xdc\xda\r\xb5\xed]Z\xc0', b'V"\xc90\xb4\xder\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xd8\x01\x7f\xf4\x91\xecp@', b'\xc0\xf2\x13f\x1e\xb2U@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xcaL\xaa\xb9J\xcfS\xc0', b'\xcaL\xaa\xb9J\xcfS\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'\x10\xab\xe6*\x13XP@', b'\x18\xe9e2\xa3Ro@', b'^\x00\x00\x00\x00\x00\x00\x00', b':\x16\xcf\xc9B\xf9n\xc0', b'\xe6\xca(\xfa\x94r\xe2\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x85l;^\xb0\x1bT\xc0', b'\x00\x00\x00\x00\x00@X@', b'^\x00\x00\x00\x00\x00\x00\x00', b';\xc8\x82\xfd#\xb9l\xc0', b'\x1e\xc6?\xf7d\xbd\xe0?', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xeaH\x88\x91\xa7>r\xc0', b't\\\xa9jXH]\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x81n\x98\xd0\x10\xc3|\xc0', b'xy\xf81\x82d\xe7?', b'%\x00\x00\x00\x00\x00\x00\x00', b'H\xc7\xb6\xb8C\xf2q\xc0', b'H\xc7\xb6\xb8C\xf2q\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'8g\xe8\x980\xa3d\xc0', b'8g\xe8\x980\xa3d\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'@\x15\xa1d$\xb4;@', b'\x80\x02u\x8bU\xf0Q\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xd3$\x8d&\xc0\xc8d\xc0', b'\xd3$\x8d&\xc0\xc8d\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'F\xf0\x1b\x84\xb9\xeas@', b'$\xd7\x93\xb0Q\x9c|@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xfd\x91\x8a\xea/\xedu\xc0', b'\x82\xf2d\xa5\x17\xe9\xe0?', b'%\x00\x00\x00\x00\x00\x00\x00', b'h;\x1f\x84\x99JP@', b'H\xa8\xd2\xbdhBa@', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xa0R,)[^T\xc0', b'\xf8\xfa\xbbZ\xf6tY@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\x92\xa7\x14Ac\xadu@', b'l\xeem\xbb\x92\x89}\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xf2\x00?\xb7\x05\xf5~\xc0', b'\xdc""\xcd\x1a\xa2l\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xd7O\xe6\xcb\x97\xb5i\xc0', b'\xd7O\xe6\xcb\x97\xb5i\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'D\xb3\nP\xb1\xb1p\xc0', b'D\xb3\nP\xb1\xb1p@', b'+\x00\x00\x00\x00\x00\x00\x00', b'\x1a&\xec&#\x94t@', b'\xfcd\xddj5\x1fk\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'0\xfe\x0bR\x12\x9dw\xc0', b'\xf4\xcd\xca\x06X\xd4x\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xa9\xb5\xfe\x91\xac@F\xc0', b'\xa9\xb5\xfe\x91\xac@F\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\x00\xd7\xccK\xaa\xf8m@', b'\xc0r\xe0\xb7F\xb4v@', b'%\x00\x00\x00\x00\x00\x00\x00', b'?\xd7\xa0\x86\xd8\xf1e\xc0', b'?\xd7\xa0\x86\xd8\xf1e\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'<\xbf \xc3q\x8ej\xc0', b'\x80\x07yK\xaa+\xcd?', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x00\x86u8\x16\x15Q@', b'\x16\xa9\xc5 \xa4+p\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xb2\xad\x14\xf5\xd2\x02\x7f@', b'8(\x88P]EU@', b'+\x00\x00\x00\x00\x00\x00\x00', b'R\x7f\xaf\x12\x05\x83m\xc0', b'\x00\xea\xefL_GZ@', b'*\x00\x00\x00\x00\x00\x00\x00', b'z\r\xd4\xae\xda\xcfu\xc0', b'\xa8\n+\xb0\x8d\x15U\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xc3\xfc\x02\x9c\xaal}\xc0', b'\xae\xd4\xe6\x15\x85{y@', b'^\x00\x00\x00\x00\x00\x00\x00', b'KV\xd2\x9cp\xa7u\xc0', b'\x80\xdfd\xe4\x0b\x17\x8d?', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x01\xefZ\xb8/*y\xc0', b'\x01\xefZ\xb8/*y@', b'%\x00\x00\x00\x00\x00\x00\x00', b"'\xffJ\xfe\xe2\xd4p\xc0", b"'\xffJ\xfe\xe2\xd4p\xc0", b'%\x00\x00\x00\x00\x00\x00\x00', b'2}\r\xe8q&s@', b'\xc6\x85s\xa4\x1e\x8eu@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x01\xb3\x01\x98\x03@i\xc0', b'\x01\xb3\x01\x98\x03@i@', b'/\x00\x00\x00\x00\x00\x00\x00', b'h\x97-\xa6W\xbbK\xc0', b'\xde\x1a\x13\x08"\xdap@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x91\xf7\x85I\xd8\x07z\xc0', b'\x91\xf7\x85I\xd8\x07z\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xa82c\xdb7"P@', b'`Uv\xa5$\xf60@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x1a~]\xf2\xd1h}@', b'\xb0\xa1c\x9f=\xf7O@', b'+\x00\x00\x00\x00\x00\x00\x00', b'|\xce\xd1\xad\x02\xefe@', b't{\xc4\x9fS_i@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xaaZ\xb4/P\x86u\xc0', b'\xbc\xa9\x97\n\x90\x1d\xd5?', b'%\x00\x00\x00\x00\x00\x00\x00', b' +\x80\x92\xefin\xc0', b' +\x80\x92\xefin@', b'^\x00\x00\x00\x00\x00\x00\x00', b'4v\x81g\xfc\x1f\r@', b'\xa4(\xbcwO\x84T@', b'-\x00\x00\x00\x00\x00\x00\x00', b'8\xa9N\x8b\x88Ik@', b'\xd09A4[\xcaz@', b'^\x00\x00\x00\x00\x00\x00\x00', b'1\x03\xf7\x18\xd87p\xc0', b'`Ka\x18\x13m\xe5\xbf', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xc1q\x01\xf8\xc4|R\xc0', b'\xc1q\x01\xf8\xc4|R@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xedl\x13\xf3\xba*u\xc0', b'\xc0\xa2\xe1|?-\xd8\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'sJ\xb7\x106=}\xc0', b'\xc0\xd6\x11l\x04%\xca?', b'%\x00\x00\x00\x00\x00\x00\x00', b'$\x8f\x95bU\xd5k\xc0', b'$\x8f\x95bU\xd5k\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'Wu\xa0\x0c\x1e\xbdw\xc0', b'Wu\xa0\x0c\x1e\xbdw\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x0b\x85\xee\xee:\x8c{\xc0', b'\x0b\x85\xee\xee:\x8c{\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xf3\xae\xa0a\xf4\xd4r\xc0', b'\xe0\xa5;n\xe3\x1bq@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x0c\xbcd\xf1\x06=w\xc0', b'}\xad`\xf1\x9e\x96u\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\x8c\x1a\xe3\x93\xe2By@', b'@\xbb\r\xb2\xd6\xc6\x1a@', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xd8\x1bb\xc8\x8b\x8bY@', b'\xb2 \x05\x94\x99\x90w@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x80J?\xa3\xed\xa5>@', b'\xa49\xc2\xb8\xf9(u\xc0', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xd0\x9d^N{*Z\xc0', b'\xd0\xed~J\xb8\xe40\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b"\xedk'\xf40\xdfz\xc0", b"\xedk'\xf40\xdfz\xc0", b'^\x00\x00\x00\x00\x00\x00\x00', b'n\xb0}M\xd2\xca{\xc0', b'0\xf4R\x83p\x93\xe5\xbf', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xba\x853\x1e5ta\xc0', b'\xe8\x7fh\xfc\xb9\x9bh\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x12\x8b\x90\x1f\x8d\x851\xc0', b'\x12\x8b\x90\x1f\x8d\x851\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xb8$[\x8fM\xb2"@', b'\x961.\x02c\x11;@', b'/\x00\x00\x00\x00\x00\x00\x00', b'hM\xee\xce\\\x12Q@', b'R\xce\xa3\x84\x10?y@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xad\xae\x85\xbaS\xf6R@', b'\xa0k\xe1\xab\x0f\x81H@', b'-\x00\x00\x00\x00\x00\x00\x00', b'lUS\x8c\xa3\xf2i@', b'\xc0\xd0(\xdbJc:@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xed\x15\x84n\xa0O|\xc0', b'\xd0_%\xe2u\xd3\xc2\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'kYqO=K~\xc0', b'L|q\x8b\x9a\xd4\xdb?', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xb0\xc4\xcaZT;H@', b'\xa0\xc2\xa0\xc3\xbf\x1af@', b'+\x00\x00\x00\x00\x00\x00\x00', b'\x08\xa1h~\xaa3F\xc0', b'\xbcxVu\xc4\x9fa\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'n\x9f~\xd5\x01\xb2~@', b'\x8a\x81\xd2\xe5\xd5\x9d`\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'o\xdaiB5\x1fy\xc0', b'o\xdaiB5\x1fy@', b'%\x00\x00\x00\x00\x00\x00\x00', b' \xa8\t\x87\x81\xe7W@', b'0I\xed\xb5\x15vj\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'\x80a\xb8\x82\x04\xb0q@', b'X\xa1\x98\xc1\xc0\xa1l@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x80S\xe2~%GW\xc0', b'\x00\x00\x00\x00\x00\xc0P@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xaf\x80Z\xe6\xab\xb4v\xc0', b'\x04\xba?\x85C\xf1\xe4?', b'-\x00\x00\x00\x00\x00\x00\x00', b'\x80\x91\xd0<\xb8 -\xc0', b',n\x0e\xe9\xf6vr\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x82FJ\xf2\xee\xd7~\xc0', b'\x82FJ\xf2\xee\xd7~@', b'^\x00\x00\x00\x00\x00\x00\x00', b'`\xe5\xc4\xacKd0\xc0', b'\x00\x00\x00\x00\x00@V@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xf0\x00\xcedb\xa0}\xc0', b'd\x7f\x13\x90u8\xda?', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xfa\x8c\xea\x84_\xe3S\xc0', b'\x00\x00\x00\x00\x00@Q@', b'/\x00\x00\x00\x00\x00\x00\x00', b'P[m\xef\xb0\xf9J@', b'\xa8\x8fHU\xa9\xf3w@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xfa\xe3\xec\xc8\xd3rW\xc0', b'\xfa\xe3\xec\xc8\xd3rW@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xce\x13\xaf\xd3\x9b\xf4|\xc0', b'\xce\x13\xaf\xd3\x9b\xf4|@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xf0\x15\xcdv\xf6\x97F@', b'\x90\x1b\x1b\xa4\x17\xefC\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'$\x99\x06\x9dp]i@', b'\xe89\xc7\xe3\x9fBt\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xdf\xec\x17 ,Vh\xc0', b'\xb8\xd3+\xddR|\xe2\xbf', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xd4\x91\x84f\xf0\xa2t\xc0', b'C\x7f\xa0n%\x9er\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'zm)zi\x16\xf8\xbf', b'\x02d\xf9EW\xf8\xe6\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x87Z\x08\xe4\xea&X\xc0', b'\x00\x00\x00\x00\x00\x80D@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xb1\xf3?\xdfQ\xb5b\xc0', b'\xb1\xf3?\xdfQ\xb5b\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'}\xd9\x96\x90[\xf2v\xc0', b'}\xd9\x96\x90[\xf2v\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xf7\x0b8\xa0\xf0\x02(@', b'aI\x1bn\xbd\xbd=@', b'/\x00\x00\x00\x00\x00\x00\x00', b'n\xc8\xaa>\xeb\xa8m\xc0', b'\\\xdc\xe8\xcf\x8e\xf6o@', b'*\x00\x00\x00\x00\x00\x00\x00', b'I@\x1d\\)+~\xc0', b'\xe5"\x16\x8b\xc3k|\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x08\xe9\xbc_\xfbnS@', b'wL\xc1\xbc\xd3\xd8>@', b'^\x00\x00\x00\x00\x00\x00\x00', b'K\xac\x9dm\x8a\xaaP@', b'0\xe2D\x05K\tO@', b'/\x00\x00\x00\x00\x00\x00\x00', b'0\x9e(\xbfb\x86u@', b'\xa29\xc6j\x8f\xaft\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x85\xa7\xc9/+\xe1T\xc0', b'\x00\x00\x00\x00\x00\xc0R@', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xb4>\xa6[\xc4\xeaP\xc0', b"@\x12\x11A&\xd5'\xc0", b'*\x00\x00\x00\x00\x00\x00\x00', b'f\xb0@\xe1\x16wv\xc0', b'\xbe\xc5<\xdah\x8dy@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xd1Qe<\xaf\xfeJ\xc0', b'\x00\x00\x00\x00\x00\x80N@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xe4JR\x03X\nq\xc0', b'\x08\xc6m\xbf\xd81J\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'42\x8e\xa9\xcd)w@', b'Hp\xd2DS\x18g@', b'%\x00\x00\x00\x00\x00\x00\x00', b'?\x1a@\x00\xa5\x9ev\xc0', b'?\x1a@\x00\xa5\x9ev@', b'-\x00\x00\x00\x00\x00\x00\x00', b'\xe1&e\x0b12}\xc0', b'\x84\xf1\x81\x9dxhi\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\x80\xadk`\x1ffq@', b'\xdc\xbc\xb2\xb2{\xf8y@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xe7\xe0\xa3T\x14\xd1r\xc0', b'\xfc\xc3\x94\xc0-\x88\xea?', b'%\x00\x00\x00\x00\x00\x00\x00', b'|\xf1a.+\x85}@', b'\x102|\x91?VT@', b'%\x00\x00\x00\x00\x00\x00\x00', b'c\xbd\xa4F\x86\xe6Z\xc0', b'c\xbd\xa4F\x86\xe6Z@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\n\n7\x1a\x84fs\xc0', b'V\xff\xac\xfb\x8f\x07\xe4?', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x02\xbb\x1f\xb1L\xf9"\xc0', b'\xa2\x94\x80\x07\xfcM\xe9?', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xb8P-\xc5\xfa\x12^\xc0', b'\xb8P-\xc5\xfa\x12^\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'z\xdamF\xfdkd\xc0', b'\xb8\xa3\xf3\xd7\x90\xae\xeb?', b'%\x00\x00\x00\x00\x00\x00\x00', b'y\r-\xdf\xf3\x96c\xc0', b'y\r-\xdf\xf3\x96c@', b'^\x00\x00\x00\x00\x00\x00\x00', b"\rO\xa6\x9b\x12'P\xc0", b'\xc0\xf5\x8d\xaeMw\xb9\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xaaB\xe2\x8e\x14\xc0O@', b'H1A\xfc\xda\xfd@@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xf0\xffL0\x0f"x@', b'L\xa5\xc1\x1c_\xc4Z\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x97W\x85\xf5\xb4\xcbw\xc0', b'\x97W\x85\xf5\xb4\xcbw\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'0\\\xf2!C\xe2c@', b'D\xa58\xd6DJo@', b'^\x00\x00\x00\x00\x00\x00\x00', b'6_\x98\xf83~\x13\xc0', b'`O\x8d\tv\xf6\xd7\xbf', b'+\x00\x00\x00\x00\x00\x00\x00', b'\x80\n\\z\xd4\xab\x03@', b'\x90\x8d\x98K^#d@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x13n\x06^\x86\x99D\xc0', b'\x13n\x06^\x86\x99D\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xcbY\xab\xb1;\x01\x7f\xc0', b'n}\xac\xbb.\xf5\xe9\xbf', b'^\x00\x00\x00\x00\x00\x00\x00', b'a\x81.1\x8fNC\xc0', b'\x00\x00\x00\x00\x00\x80C@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\x0c\xb4\x83\xe6\xcasg@', b'!\xab\xf4\x13g\xffr\xc0', b'*\x00\x00\x00\x00\x00\x00\x00', b'\xfc\x1at@\x8f\xf9b@', b',\x9f\x8b\xe5{\xf4d@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xea\xee]\xb2\xe5\x1d`\xc0', b'\xb0\xb7\x95\xea\xac\xc5U@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\x84\xb1\x0e\x8f\x9e\x96~@', b'hQ\x97\xa3\xa1\x92h@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\x1e\x8bM;v\x9es@', b'\xa4;\x03\xd108s@', b'*\x00\x00\x00\x00\x00\x00\x00', b'\x87I:\r~\xecs\xc0', b'\x00\xa7\xa5>N\x9eZ@', b'%\x00\x00\x00\x00\x00\x00\x00', b'h\t\x1bn\x94\x9fn@', b'\xe0\x05\x1b\xe3\xac\xc23@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\x04\x12\x16\\1Lk\xc0', b' \x8b\x86M\x84(L@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\xe0\xac}d\x81\x17t\xc0', b'\x88\xa5r\xeb\xfa\x7f}@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xcc\x18T\xae\x9cM}\xc0', b'\xcc\x18T\xae\x9cM}\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'Z\xca\xa0y]\xc6l\xc0', b'\xfd\xab\x1c\xe6\x9do|\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'hk\xb9!\xb0\xd0y\xc0', b'\x80\x91\xb1S\xb6\xe4%\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xc0\x01$G\xc6\xa7I\xc0', b'\xd0\xf7\x85Qk\x8e\xee?', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xc8JNG\xca\x93w\xc0', b'\xc8JNG\xca\x93w@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xfe\x95\x84\xf0\xe7\xecY\xc0', b'\xfe\x95\x84\xf0\xe7\xecY\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xe4z}\xbb\xc2\xdeq@', b'\\\x93\xcd\rp\xa1w\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'~\xd7\x97_\x7f\xf6q\xc0', b'I\x19I\xd1,uy\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\x06Ia{\xd5\xb3{@', b'\xf0*\x9a\xdb\xf2u9\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xdb\x7f\x9dfaY_\xc0', b'\xa8\x95;\x04\xae5\xcd\xbf', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xf5h.\xd1\x80\xebm\xc0', b'\xf5h.\xd1\x80\xebm\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xa2\xcd\xa2\xa5\xc5\xf1\x12\xc0', b'\xa2\xcd\xa2\xa5\xc5\xf1\x12\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'p}=\xf1\x18\x04M@', b'\rX\x9e\xe9Q!r\xc0', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xb1\x0foM^EW\xc0', b'\x00\x00\x00\x00\x00@S@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\x88\x92\r8\xb0\xa1=\xc0', b'\x00\x00\x00\x00\x00\x007@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x87t\xc0H\xd2\xc2d\xc0', b'\x87t\xc0H\xd2\xc2d@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\x82)\xc0ad\xfe|@', b'\xf4*\xefY>\xc2t@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xfaP"\x90\xbc\x03\\\xc0', b'\xfaP"\x90\xbc\x03\\\xc0', b'-\x00\x00\x00\x00\x00\x00\x00', b'\x80\x11\xcf\xb4\xdbe`\xc0', b'z\x13&}0\x06l\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'l\x97\xe6\xbc\x05ev\xc0', b'vp\xd1i\xc0\xd1p\xc0', b'%\x00\x00\x00\x00\x00\x00\x00', b'sV^\xa4\xc9\x1fd\xc0', b'sV^\xa4\xc9\x1fd@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\x98\x99\x7f\xf4\xa0\xa3_\xc0', b'\xc6\xa8\xc5\x9d\x13\x8bv@', b'-\x00\x00\x00\x00\x00\x00\x00', b'\x94B\xc2\xe2\xc0\x11s\xc0', b'l\xb7\xa3"\x81Gs@', b'%\x00\x00\x00\x00\x00\x00\x00', b'\xf8\x14\xac\xe1`\rv@', b'\xfa\xc2\xd4\xbe\x14\xefg\xc0', b'+\x00\x00\x00\x00\x00\x00\x00', b'\x88\xe0I\x9e]gV@', b'pR\xfc\x99\xe6GV@', b'+\x00\x00\x00\x00\x00\x00\x00', b'\xa2\x1f.\x8c\xbddi\xc0', b'XxY\x1b\xa8d]@', b'^\x00\x00\x00\x00\x00\x00\x00', b'9+\xf5\x1a\xf5\x97P@', b'\xf4\x17\xa6\x1c\x19\x90-@', b'^\x00\x00\x00\x00\x00\x00\x00', b'\xf30\x86vd\xdeC\xc0', b'\x00\x00\x00\x00\x00\x80K@', b'/\x00\x00\x00\x00\x00\x00\x00', b'\x1a\x15\x96\xa2\xbc\xbe{@', b"\xd0\xe2n;'\xdfJ@", b'/\x00\x00\x00\x00\x00\x00\x00', b'\x00p~\xc1oQ\xdd\xbf', b'\xd4\x80^\xc4\xc0\xd9j\xc0']

asli = "00111110101010101001010001100010011101001101111110010101010001001000011000100010100000111000010000010001010100100001100010101010110010100100110001000000000000001010101110100011001000001000010000100000110000001010001000001100010100001010000010000000100000001100000000000000010000100010100000010100010001111100011000000000000000001101001011011000010000011000010110010100"

import math
    
def isNegative(number):
    return number < 0

def isNotNumber(number):
    return math.isnan(number)

def isInfinity(number):
    return math.isinf(number)

def isComplex(number):
    return isinstance(number, complex)

inc = 0
-9223372036854775808

def gauntlet(a1):
    if(towa[z][1] == -9223372036854775808):
        return 1
    if(a1 == "a"):
        print("not number", a1)
        return 1
    elif(isComplex(a1)):
        print("complex", a1)
        return 1
    elif(isNegative(a1)):
        print("negative", a1)
        return 1

    elif(isInfinity(a1)):
        print("infinity", a1)
        return 0
    else:
        return 0
    

import math

def fmodf64(x, y):
    return math.fmod(x, y)

def fpowf64(x, y):
    # try:
    #     return math.pow(x, y)
    # except Exception as exception:
        # print exception
        # print("error")
        # print(exception)

    ret = pow(x, y)

    return ret

# def fmodf64(x, y):
#     if math.isnan(x) or math.isnan(y):
#         return float('nan')
#     if y == 0.0:
#         return float('nan')
#     result = math.fmod(x, y)
#     if (x < 0.0 and result > 0.0) or (x > 0.0 and result < 0.0):
#         result += y
#     return result

# def fpowf64(x, y):
#     if math.isnan(x) or math.isnan(y):
#         return float('nan')
#     if x == 0.0 and y < 0.0:
#         return float('nan')
#     result = math.pow(x, y)
#     if x < 0.0 and y.is_integer() and abs(y) % 2 == 1:
#         result = -abs(result)
#     return result



hasil = ''
z = 0
for i in range(0, len(data), 3):
    operation = chr(data[i][0])
    # if(operation == "^"):
    #     operation = "**"
    data1 = data[i + 1]
    data2 = data[i + 2]
    intrep1 = u64(data1)
    intrep2 = u64(data2)
    hexencode1 = hex(intrep1)
    hexencode2 = hex(intrep2)

    import struct
    float_value_1 = struct.unpack('d', data1)[0]
    float_value_2 = struct.unpack('d', data2)[0]
    # print(float_value_1)
    # print(float_value_2)
    # print(operation)
    # print(f"{float_value_1} {operation} {float_value_2}")
    # valint = eval(f"{intrep1} {operation} {intrep2}")
    # print(f"int rep {valint}")
    # value = eval("float_value_1 {} float_value_2".format(operation))
    value = 0.0
    # print("OP ", operation)
    if(operation == "%"):
        # value = fmodf64(intrep1, intrep2)
        value = fmodf64(float_value_1, float_value_2)
        floatvalue = value
        # print(value)
        # print(intrep1, intrep2)
        # # value = intrep1 % intrep2
        # value = fmodf64(intrep1, intrep2)
        # print(value, operation)
        # bytesvalue = p64(value)
        # floatvalue = struct.unpack('d', bytesvalue)[0] 
        # print("float val", floatvalue)
        # print("hex val", hex(value))
        # print("intrep1 val", hex(intrep1))
        # print("intrep2 val", hex(intrep2))

    elif(operation == "^"):
        # print(intrep1, intrep2)
        value = fpowf64(float_value_1, float_value_2)
        floatvalue = value
        print(floatvalue)
        if(isComplex(value)):
            pass
        # elif(value >  10000000000000000000000000000000000000000000000000):
        #     floatvalue = "a"
        # floatvalue = "a"
        # if(value != "a"):
        #     print(value, operation)
        #     bytesvalue = p64(value)
        #     floatvalue = struct.unpack('d', bytesvalue)[0] 
    
    
    elif(operation == "+"):
        value = float_value_1 + float_value_2
        floatvalue = value
        # value = intrep1 + intrep2
        # bytesvalue = p64(value)
        # floatvalue = struct.unpack('d', bytesvalue)[0] 

        # value = float_value_1 + float_value_2
        
    elif(operation == "-"):
        value = float_value_1 - float_value_2
        floatvalue = value
        # value = (intrep1 - intrep2) & 0xffffffffffffffff
        # bytesvalue = p64(value)
        # floatvalue = struct.unpack('d', bytesvalue)[0] 
    elif(operation == "*"):
        value = float_value_1 * float_value_2
        floatvalue = value
        # value = intrep1 * intrep2
        # bytesvalue = p64(value)
        # floatvalue = struct.unpack('d', bytesvalue)[0] 
    elif(operation == "/"):
        value = float_value_1 / float_value_2
        floatvalue = value
        # value = intrep1 / intrep2
        # floatvalue = struct.unpack('d', bytesvalue)[0] 
        # packvalue = struct.pack('d', value)[0] 
        # bytesvalue = p64(packvalue)
        # floatvalue = struct.unpack('d', bytesvalue)[0] 

    if(operation == "^"):
        print(f"{float_value_1} {operation} {float_value_2} {floatvalue}")
        # print("X")

    else:
        print(f"{float_value_1} {operation} {float_value_2} {floatvalue}")

        # print(f"{hexencode1} {operation} {hexencode2} {floatvalue}")
        pass

    comp = gauntlet(floatvalue)
    # print(f"check {z}", str(comp),asli[z])
    # if(str(comp) != asli[z]):
    #     print("error")
        # break
    hasil += str(comp)
    # print(value)
    # print(comp)
    # print(hasil)
    z += 1

# def xor_bytes_with_bits(bytes_variable, bit_string):
#     # Convert the bit string to a list of individual bits
#     bit_list = list(bit_string)

#     # XOR each bit of the bytes variable with the corresponding bit in the bit string
#     result = b""
#     for i, byte in enumerate(bytes_variable):
#         # Convert the byte to an integer
#         # print(byte)
#         byte_int = byte
#         bic = bin(byte)[2:].ljust(8, "0")
#         print(chr(byte_int), bic)
#         byte_int = int(bic[::-1], 2)
#         bic = bin(byte_int)[2:].ljust(8, "0")
#         print(chr(byte_int), bic)
#         # print(chr(byte))
#         # XOR each bit of the byte with the corresponding bit in the bit string
#         result_byte = 0
#         for j in range(8):
#             bit_index = i * 8 + j
#             if bit_index < len(bit_list):
#                 bit = int(bit_list[bit_index])
#                 print(chr(result_byte))
#                 result_byte |= (byte_int & (1 << j)) ^ (bit << j)
#                 print(i, j, bit, chr(byte_int),(byte_int & (1 << j)) >> j,(byte_int & ((1 << j)) ^ (bit << j)) >> j),
#                 print(chr(result_byte))
#         # Append the modified byte to the result
#         result += result_byte.to_bytes(1, "little")

#     return result

def xor_bytes_with_bits(bytes_variable, bit_string):
    bytes_v = list(bytes_variable)
    
    for bit in range(len(bit_string)):
        if(bit_string[bit] == "1"):
            # print(f"{bit // 8} {(7 - bit % 8)} {len(bytes_v)}")
            bytes_v[bit // 8] ^= 1 << (7 - bit % 8)
            # print( bytes(bytes_v))
    # print(bytes_v)
    bytes_v = bytes(bytes_v)
    return bytes_v


kotak = b""
kotak += (p64(0x10EEB90001E1C34B))
kotak += (p64(0xCB382178A4F04BEE))
kotak += (p64(0xE84683CE6B212AEA))
kotak += (p64(0xA0F5CF092C8CA741))
kotak += (p64(0x20A92860082772A1))
kotak += p32(0x35ABB366)
kotak += p16(0xE9A4)
# XOR the bytes variable with the bit string
result = xor_bytes_with_bits(kotak, hasil)
print(result)

print(inc)

